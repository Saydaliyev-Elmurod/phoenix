server:
  port: 8100
  forward-headers-strategy: framework
  servlet:
    contextPath: /
  error:
    whitelabel:
      enabled: false

spring:
  application:
    name: phoenix

  batch:
    jdbc:
      initialize-schema: always

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${POSTGRES_SERVER:localhost:5434}/postgres
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:secret}

    hikari:
      pool-name: HikariPool-${spring.application.name}
      maximum-pool-size: ${POSTGRES_POOL_SIZE:20}
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      initialization-fail-timeout: 0
      connection-test-query: SELECT 1
      leak-detection-threshold: 2000
      register-mbeans: true

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    hibernate:
      ddl-auto: validate
    open-in-view: false

  liquibase:
    url: jdbc:postgresql://${POSTGRES_SERVER:localhost:5434}/postgres
    user: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:secret}
    change-log: classpath:db.migration/db.changelog-master.yaml
    liquibase-schema: phoenix
    enabled: true
  codec:
    max-in-memory-size: 16MB

  servlet:
    multipart:
      max-file-size: 16MB

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html


info:
  app:
    name: ${spring.application.name}
    version: "@application.version@"
    description: "@application.description@"


application:
  token:
    signing:
      key: 7C7P662RQS6JXHJL3VEK8ZJU0VHU4KZ2JXYJ8LZOCYHV591S97SL32HFZMADCVI2
